name: 'Merge Request Workflow'

on:
  push:
  pull_request:
        paths:
        - 'infra/project-infra/**'
        - '.github/workflows/merge-request.yml'

env:
  TF_IN_AUTOMATION: true
  TF_VAR_github_access_token: ${{ secrets.GIT_ACCESS_KEY }}


permissions:
  contents: read
  id-token: write

jobs:
  terraform-plan:
    name: 'Plan stage'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: infra/project-infra

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.5

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: "arn:aws:iam::316893886507:role/humming-bird-github-oidc-role"
          aws-region: ap-south-1

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform validate
        run: terraform validate

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: terraform plan -input=false -out=tfplan.tfstate